/* *Even Fibonacci numbers*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

package problem_2

import (
	"common"
)

func SumOfFibonacciSeq(condition func(uint64) bool, upto uint64) uint64 {
	seq := common.FibonacciSeq(uint64(1), uint64(2), upto)
	var sum uint64
	for n := range seq {
		if condition(n) {
			sum += n
		}
	}
	return sum
}
